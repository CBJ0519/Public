/*
(url: https://zerojudge.tw/ShowProblem?problemid=b548)

內容
賓果遊戲是一種兩人（或多人）進行的遊戲，遊戲盤大小通常為 5*5，每位玩家會在遊戲盤中填入 1, 2, …, 25 這25 個號碼，填入的位置由玩家自行決定。
遊戲開始後，每位玩家輪流叫號，每叫一個號碼，所有玩家就會在自己的遊戲盤上標記該號碼。
若同一列、同一行或對角線上的五個號碼均被標記，即可得到一分，先得到五分的玩家為勝利者。
瑞奇最近才接觸到這個遊戲，他希望有一個程式能幫助他決定每次叫號時該選擇哪個號
碼。他的策略如下：
(1) 從未標記的號碼中選擇標記該號碼後，該盤面的分數最高者；
(2) 如果有多於一個可選擇的號碼，選擇數值最小的。

例圖 : https://ppt.cc/fyz7zx@.png

盤面1 中，共有14 個號碼可選擇，其中選擇10 可讓盤面分數為2，選擇18 可讓盤面分
數為1，而其它選擇則都得不到分數，因此瑞奇的策略會選擇10。盤面2 中，選擇6 和10 都
可得到2 分，其它選擇都得不到分數，瑞奇會選擇較小的值6。

請你撰寫一個程式，讀入一個起始盤面和玩家叫過的號碼，輸出瑞奇應該選擇的號碼。

輸入說明
每一筆測試資料會先有五列，每一列有五個數字，以空白隔開。已知這25 個數字為由1
到25 的相異數字。接著有N 列 (1 <= N <= 24)，每列僅有一個數字，代表玩家叫過的號碼。最
後以-1 表示結束。

輸出說明
根據瑞奇的策略，輸出瑞奇應該選擇的號碼。

範例輸入 #1
1 9 23 17 18
10 24 8 16 2
11 13 3 7 19
12 4 15 6 20
25 14 5 22 21
1
17
24
8
16
2
11
3
7
12
25
22
21
-1
範例輸出 #1
6
*/
#include<bits/stdc++.h>
using namespace std;
int mp[26][2];
int a[5][5]={0};
int check(int n){
    int ans=0,sum;
    int x=mp[n][0], y=mp[n][1];
    sum=a[0][y]+a[1][y]+a[2][y]+a[3][y]+a[4][y];
    if(sum==4)ans++;
    sum=a[x][0]+a[x][1]+a[x][2]+a[x][3]+a[x][4];
    if(sum==4)ans++;
    if(x==y){
        sum=a[0][0]+a[1][1]+a[2][2]+a[3][3]+a[4][4];
        if(sum==4)ans++;
    }
    if(x+y==4){
        sum=a[0][4]+a[1][3]+a[2][2]+a[3][1]+a[4][0];
        if(sum==4)ans++;
    }
    return ans;
}
int main(){
    int x,i,j;
    set<int>s;
    for(i=0;i<5;i++){
        for(j=0;j<5;j++){
            cin>>x;
            mp[x][0]=i;
            mp[x][1]=j;
            s.insert(x);
        }
    }
    cin>>x;
    while(x!=-1){
        a[mp[x][0]][mp[x][1]]=1;
        s.erase(x);
        cin>>x;
    }
    int score=-1, ans;
    for(auto i:s){
        if(check(i)>score)score=check(i),ans=i;
    }
    cout<<ans;
    return 0;
}
